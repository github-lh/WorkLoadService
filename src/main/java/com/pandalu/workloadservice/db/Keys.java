/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db;


import com.pandalu.workloadservice.db.tables.InstanceInfo;
import com.pandalu.workloadservice.db.tables.K8sContainerInfo;
import com.pandalu.workloadservice.db.tables.K8sNodeInfo;
import com.pandalu.workloadservice.db.tables.K8sPodInfo;
import com.pandalu.workloadservice.db.tables.Map;
import com.pandalu.workloadservice.db.tables.PmInfo;
import com.pandalu.workloadservice.db.tables.VmInfo;
import com.pandalu.workloadservice.db.tables.Vmimages;
import com.pandalu.workloadservice.db.tables.records.InstanceInfoRecord;
import com.pandalu.workloadservice.db.tables.records.K8sContainerInfoRecord;
import com.pandalu.workloadservice.db.tables.records.K8sNodeInfoRecord;
import com.pandalu.workloadservice.db.tables.records.K8sPodInfoRecord;
import com.pandalu.workloadservice.db.tables.records.MapRecord;
import com.pandalu.workloadservice.db.tables.records.PmInfoRecord;
import com.pandalu.workloadservice.db.tables.records.VmInfoRecord;
import com.pandalu.workloadservice.db.tables.records.VmimagesRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>comp_net_fusion</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<InstanceInfoRecord> KEY_INSTANCE_INFO_PRIMARY = UniqueKeys0.KEY_INSTANCE_INFO_PRIMARY;
    public static final UniqueKey<K8sContainerInfoRecord> KEY_K8S_CONTAINER_INFO_PRIMARY = UniqueKeys0.KEY_K8S_CONTAINER_INFO_PRIMARY;
    public static final UniqueKey<K8sNodeInfoRecord> KEY_K8S_NODE_INFO_PRIMARY = UniqueKeys0.KEY_K8S_NODE_INFO_PRIMARY;
    public static final UniqueKey<K8sPodInfoRecord> KEY_K8S_POD_INFO_PRIMARY = UniqueKeys0.KEY_K8S_POD_INFO_PRIMARY;
    public static final UniqueKey<MapRecord> KEY_MAP_PRIMARY = UniqueKeys0.KEY_MAP_PRIMARY;
    public static final UniqueKey<PmInfoRecord> KEY_PM_INFO_PRIMARY = UniqueKeys0.KEY_PM_INFO_PRIMARY;
    public static final UniqueKey<VmimagesRecord> KEY_VMIMAGES_PRIMARY = UniqueKeys0.KEY_VMIMAGES_PRIMARY;
    public static final UniqueKey<VmInfoRecord> KEY_VM_INFO_PRIMARY = UniqueKeys0.KEY_VM_INFO_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InstanceInfoRecord, VmimagesRecord> INS_IMG_FK = ForeignKeys0.INS_IMG_FK;
    public static final ForeignKey<K8sNodeInfoRecord, MapRecord> K8S_N_CITY = ForeignKeys0.K8S_N_CITY;
    public static final ForeignKey<PmInfoRecord, MapRecord> CITY_FK = ForeignKeys0.CITY_FK;
    public static final ForeignKey<VmInfoRecord, VmimagesRecord> IMG_FK = ForeignKeys0.IMG_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<InstanceInfoRecord> KEY_INSTANCE_INFO_PRIMARY = Internal.createUniqueKey(InstanceInfo.INSTANCE_INFO, "KEY_instance_info_PRIMARY", InstanceInfo.INSTANCE_INFO.INSTANCEID);
        public static final UniqueKey<K8sContainerInfoRecord> KEY_K8S_CONTAINER_INFO_PRIMARY = Internal.createUniqueKey(K8sContainerInfo.K8S_CONTAINER_INFO, "KEY_k8s_container_info_PRIMARY", K8sContainerInfo.K8S_CONTAINER_INFO.NAME, K8sContainerInfo.K8S_CONTAINER_INFO.OWNERPOD);
        public static final UniqueKey<K8sNodeInfoRecord> KEY_K8S_NODE_INFO_PRIMARY = Internal.createUniqueKey(K8sNodeInfo.K8S_NODE_INFO, "KEY_k8s_node_info_PRIMARY", K8sNodeInfo.K8S_NODE_INFO.UID, K8sNodeInfo.K8S_NODE_INFO.NAME);
        public static final UniqueKey<K8sPodInfoRecord> KEY_K8S_POD_INFO_PRIMARY = Internal.createUniqueKey(K8sPodInfo.K8S_POD_INFO, "KEY_k8s_pod_info_PRIMARY", K8sPodInfo.K8S_POD_INFO.UID, K8sPodInfo.K8S_POD_INFO.NAME);
        public static final UniqueKey<MapRecord> KEY_MAP_PRIMARY = Internal.createUniqueKey(Map.MAP, "KEY_map_PRIMARY", Map.MAP.ID);
        public static final UniqueKey<PmInfoRecord> KEY_PM_INFO_PRIMARY = Internal.createUniqueKey(PmInfo.PM_INFO, "KEY_pm_info_PRIMARY", PmInfo.PM_INFO.UUID, PmInfo.PM_INFO.PMID);
        public static final UniqueKey<VmimagesRecord> KEY_VMIMAGES_PRIMARY = Internal.createUniqueKey(Vmimages.VMIMAGES, "KEY_vmimages_PRIMARY", Vmimages.VMIMAGES.VMIMAGEID);
        public static final UniqueKey<VmInfoRecord> KEY_VM_INFO_PRIMARY = Internal.createUniqueKey(VmInfo.VM_INFO, "KEY_vm_info_PRIMARY", VmInfo.VM_INFO.UUID, VmInfo.VM_INFO.VMID, VmInfo.VM_INFO.PMID, VmInfo.VM_INFO.VMIMAGEID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<InstanceInfoRecord, VmimagesRecord> INS_IMG_FK = Internal.createForeignKey(com.pandalu.workloadservice.db.Keys.KEY_VMIMAGES_PRIMARY, InstanceInfo.INSTANCE_INFO, "ins_img_fk", InstanceInfo.INSTANCE_INFO.VMIMAGEID);
        public static final ForeignKey<K8sNodeInfoRecord, MapRecord> K8S_N_CITY = Internal.createForeignKey(com.pandalu.workloadservice.db.Keys.KEY_MAP_PRIMARY, K8sNodeInfo.K8S_NODE_INFO, "k8s_n_city", K8sNodeInfo.K8S_NODE_INFO.CITY);
        public static final ForeignKey<PmInfoRecord, MapRecord> CITY_FK = Internal.createForeignKey(com.pandalu.workloadservice.db.Keys.KEY_MAP_PRIMARY, PmInfo.PM_INFO, "city_fk", PmInfo.PM_INFO.CITY);
        public static final ForeignKey<VmInfoRecord, VmimagesRecord> IMG_FK = Internal.createForeignKey(com.pandalu.workloadservice.db.Keys.KEY_VMIMAGES_PRIMARY, VmInfo.VM_INFO, "img_fk", VmInfo.VM_INFO.VMIMAGEID);
    }
}
