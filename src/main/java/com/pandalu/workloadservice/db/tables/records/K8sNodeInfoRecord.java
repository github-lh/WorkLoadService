/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables.records;


import com.pandalu.workloadservice.db.tables.K8sNodeInfo;
import com.pandalu.workloadservice.db.tables.interfaces.IK8sNodeInfo;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Record2;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sNodeInfoRecord extends UpdatableRecordImpl<K8sNodeInfoRecord> implements Record11<String, String, Integer, String, Integer, Integer, String, String, String, String, ULong>, IK8sNodeInfo {

    private static final long serialVersionUID = -486075997;

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.uid</code>. 唯一标识符
     */
    @Override
    public void setUid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.uid</code>. 唯一标识符
     */
    @Override
    public String getUid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.name</code>. node名称
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.name</code>. node名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.city</code>. node所在城市城市代码
     */
    @Override
    public void setCity(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.city</code>. node所在城市城市代码
     */
    @Override
    public Integer getCity() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.ip</code>. node ip
     */
    @Override
    public void setIp(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.ip</code>. node ip
     */
    @Override
    public String getIp() {
        return (String) get(3);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.maxPods</code>. 最大pods容量
     */
    @Override
    public void setMaxpods(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.maxPods</code>. 最大pods容量
     */
    @Override
    public Integer getMaxpods() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.usedPods</code>. 已挂载pod数量
     */
    @Override
    public void setUsedpods(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.usedPods</code>. 已挂载pod数量
     */
    @Override
    public Integer getUsedpods() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.maxCpu</code>. 最大cpu需求量
     */
    @Override
    public void setMaxcpu(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.maxCpu</code>. 最大cpu需求量
     */
    @Override
    public String getMaxcpu() {
        return (String) get(6);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.maxMemory</code>. 最大内存需求量
     */
    @Override
    public void setMaxmemory(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.maxMemory</code>. 最大内存需求量
     */
    @Override
    public String getMaxmemory() {
        return (String) get(7);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.usedCpu</code>. 已使用cpu
     */
    @Override
    public void setUsedcpu(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.usedCpu</code>. 已使用cpu
     */
    @Override
    public String getUsedcpu() {
        return (String) get(8);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.usedMemory</code>. 已使用内存
     */
    @Override
    public void setUsedmemory(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.usedMemory</code>. 已使用内存
     */
    @Override
    public String getUsedmemory() {
        return (String) get(9);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_node_info.timestamp</code>. 时间戳
     */
    @Override
    public void setTimestamp(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_node_info.timestamp</code>. 时间戳
     */
    @Override
    public ULong getTimestamp() {
        return (ULong) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, Integer, String, Integer, Integer, String, String, String, String, ULong> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<String, String, Integer, String, Integer, Integer, String, String, String, String, ULong> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return K8sNodeInfo.K8S_NODE_INFO.UID;
    }

    @Override
    public Field<String> field2() {
        return K8sNodeInfo.K8S_NODE_INFO.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return K8sNodeInfo.K8S_NODE_INFO.CITY;
    }

    @Override
    public Field<String> field4() {
        return K8sNodeInfo.K8S_NODE_INFO.IP;
    }

    @Override
    public Field<Integer> field5() {
        return K8sNodeInfo.K8S_NODE_INFO.MAXPODS;
    }

    @Override
    public Field<Integer> field6() {
        return K8sNodeInfo.K8S_NODE_INFO.USEDPODS;
    }

    @Override
    public Field<String> field7() {
        return K8sNodeInfo.K8S_NODE_INFO.MAXCPU;
    }

    @Override
    public Field<String> field8() {
        return K8sNodeInfo.K8S_NODE_INFO.MAXMEMORY;
    }

    @Override
    public Field<String> field9() {
        return K8sNodeInfo.K8S_NODE_INFO.USEDCPU;
    }

    @Override
    public Field<String> field10() {
        return K8sNodeInfo.K8S_NODE_INFO.USEDMEMORY;
    }

    @Override
    public Field<ULong> field11() {
        return K8sNodeInfo.K8S_NODE_INFO.TIMESTAMP;
    }

    @Override
    public String component1() {
        return getUid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getCity();
    }

    @Override
    public String component4() {
        return getIp();
    }

    @Override
    public Integer component5() {
        return getMaxpods();
    }

    @Override
    public Integer component6() {
        return getUsedpods();
    }

    @Override
    public String component7() {
        return getMaxcpu();
    }

    @Override
    public String component8() {
        return getMaxmemory();
    }

    @Override
    public String component9() {
        return getUsedcpu();
    }

    @Override
    public String component10() {
        return getUsedmemory();
    }

    @Override
    public ULong component11() {
        return getTimestamp();
    }

    @Override
    public String value1() {
        return getUid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getCity();
    }

    @Override
    public String value4() {
        return getIp();
    }

    @Override
    public Integer value5() {
        return getMaxpods();
    }

    @Override
    public Integer value6() {
        return getUsedpods();
    }

    @Override
    public String value7() {
        return getMaxcpu();
    }

    @Override
    public String value8() {
        return getMaxmemory();
    }

    @Override
    public String value9() {
        return getUsedcpu();
    }

    @Override
    public String value10() {
        return getUsedmemory();
    }

    @Override
    public ULong value11() {
        return getTimestamp();
    }

    @Override
    public K8sNodeInfoRecord value1(String value) {
        setUid(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value3(Integer value) {
        setCity(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value4(String value) {
        setIp(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value5(Integer value) {
        setMaxpods(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value6(Integer value) {
        setUsedpods(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value7(String value) {
        setMaxcpu(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value8(String value) {
        setMaxmemory(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value9(String value) {
        setUsedcpu(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value10(String value) {
        setUsedmemory(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord value11(ULong value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public K8sNodeInfoRecord values(String value1, String value2, Integer value3, String value4, Integer value5, Integer value6, String value7, String value8, String value9, String value10, ULong value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IK8sNodeInfo from) {
        setUid(from.getUid());
        setName(from.getName());
        setCity(from.getCity());
        setIp(from.getIp());
        setMaxpods(from.getMaxpods());
        setUsedpods(from.getUsedpods());
        setMaxcpu(from.getMaxcpu());
        setMaxmemory(from.getMaxmemory());
        setUsedcpu(from.getUsedcpu());
        setUsedmemory(from.getUsedmemory());
        setTimestamp(from.getTimestamp());
    }

    @Override
    public <E extends IK8sNodeInfo> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached K8sNodeInfoRecord
     */
    public K8sNodeInfoRecord() {
        super(K8sNodeInfo.K8S_NODE_INFO);
    }

    /**
     * Create a detached, initialised K8sNodeInfoRecord
     */
    public K8sNodeInfoRecord(String uid, String name, Integer city, String ip, Integer maxpods, Integer usedpods, String maxcpu, String maxmemory, String usedcpu, String usedmemory, ULong timestamp) {
        super(K8sNodeInfo.K8S_NODE_INFO);

        set(0, uid);
        set(1, name);
        set(2, city);
        set(3, ip);
        set(4, maxpods);
        set(5, usedpods);
        set(6, maxcpu);
        set(7, maxmemory);
        set(8, usedcpu);
        set(9, usedmemory);
        set(10, timestamp);
    }
}
