/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables.daos;


import com.pandalu.workloadservice.db.tables.K8sNodeInfo;
import com.pandalu.workloadservice.db.tables.records.K8sNodeInfoRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sNodeInfoDao extends DAOImpl<K8sNodeInfoRecord, com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo, Record2<String, String>> {

    /**
     * Create a new K8sNodeInfoDao without any configuration
     */
    public K8sNodeInfoDao() {
        super(K8sNodeInfo.K8S_NODE_INFO, com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo.class);
    }

    /**
     * Create a new K8sNodeInfoDao with an attached configuration
     */
    public K8sNodeInfoDao(Configuration configuration) {
        super(K8sNodeInfo.K8S_NODE_INFO, com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo.class, configuration);
    }

    @Override
    public Record2<String, String> getId(com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo object) {
        return compositeKeyRecord(object.getUid(), object.getName());
    }

    /**
     * Fetch records that have <code>uid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfUid(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.UID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uid IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByUid(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.UID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByName(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.NAME, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfCity(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByCity(Integer... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.CITY, values);
    }

    /**
     * Fetch records that have <code>ip BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfIp(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.IP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ip IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByIp(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.IP, values);
    }

    /**
     * Fetch records that have <code>maxPods BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfMaxpods(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.MAXPODS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maxPods IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByMaxpods(Integer... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.MAXPODS, values);
    }

    /**
     * Fetch records that have <code>usedPods BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfUsedpods(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.USEDPODS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedPods IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByUsedpods(Integer... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.USEDPODS, values);
    }

    /**
     * Fetch records that have <code>maxCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfMaxcpu(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.MAXCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maxCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByMaxcpu(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.MAXCPU, values);
    }

    /**
     * Fetch records that have <code>maxMemory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfMaxmemory(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.MAXMEMORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maxMemory IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByMaxmemory(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.MAXMEMORY, values);
    }

    /**
     * Fetch records that have <code>usedCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfUsedcpu(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.USEDCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByUsedcpu(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.USEDCPU, values);
    }

    /**
     * Fetch records that have <code>usedMemory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfUsedmemory(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.USEDMEMORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedMemory IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByUsedmemory(String... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.USEDMEMORY, values);
    }

    /**
     * Fetch records that have <code>timestamp BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchRangeOfTimestamp(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(K8sNodeInfo.K8S_NODE_INFO.TIMESTAMP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sNodeInfo> fetchByTimestamp(ULong... values) {
        return fetch(K8sNodeInfo.K8S_NODE_INFO.TIMESTAMP, values);
    }
}
