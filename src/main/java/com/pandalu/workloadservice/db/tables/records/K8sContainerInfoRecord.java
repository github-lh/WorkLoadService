/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables.records;


import com.pandalu.workloadservice.db.tables.K8sContainerInfo;
import com.pandalu.workloadservice.db.tables.interfaces.IK8sContainerInfo;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sContainerInfoRecord extends UpdatableRecordImpl<K8sContainerInfoRecord> implements Record7<String, String, String, String, String, String, ULong>, IK8sContainerInfo {

    private static final long serialVersionUID = 879368893;

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.name</code>. pod名称
     */
    @Override
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.name</code>. pod名称
     */
    @Override
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.ownerPod</code>. 所属pod
     */
    @Override
    public void setOwnerpod(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.ownerPod</code>. 所属pod
     */
    @Override
    public String getOwnerpod() {
        return (String) get(1);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.minCpu</code>. 最少Cpu需求量
     */
    @Override
    public void setMincpu(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.minCpu</code>. 最少Cpu需求量
     */
    @Override
    public String getMincpu() {
        return (String) get(2);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.minMemory</code>. 最小内存需求量
     */
    @Override
    public void setMinmemory(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.minMemory</code>. 最小内存需求量
     */
    @Override
    public String getMinmemory() {
        return (String) get(3);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.maxCpu</code>. 最大cpu需求量
     */
    @Override
    public void setMaxcpu(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.maxCpu</code>. 最大cpu需求量
     */
    @Override
    public String getMaxcpu() {
        return (String) get(4);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.maxMemory</code>. 最大内存需求量
     */
    @Override
    public void setMaxmemory(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.maxMemory</code>. 最大内存需求量
     */
    @Override
    public String getMaxmemory() {
        return (String) get(5);
    }

    /**
     * Setter for <code>comp_net_fusion.k8s_container_info.timestamp</code>. 时间戳
     */
    @Override
    public void setTimestamp(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>comp_net_fusion.k8s_container_info.timestamp</code>. 时间戳
     */
    @Override
    public ULong getTimestamp() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, String, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.NAME;
    }

    @Override
    public Field<String> field2() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.OWNERPOD;
    }

    @Override
    public Field<String> field3() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.MINCPU;
    }

    @Override
    public Field<String> field4() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.MINMEMORY;
    }

    @Override
    public Field<String> field5() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.MAXCPU;
    }

    @Override
    public Field<String> field6() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.MAXMEMORY;
    }

    @Override
    public Field<ULong> field7() {
        return K8sContainerInfo.K8S_CONTAINER_INFO.TIMESTAMP;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getOwnerpod();
    }

    @Override
    public String component3() {
        return getMincpu();
    }

    @Override
    public String component4() {
        return getMinmemory();
    }

    @Override
    public String component5() {
        return getMaxcpu();
    }

    @Override
    public String component6() {
        return getMaxmemory();
    }

    @Override
    public ULong component7() {
        return getTimestamp();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getOwnerpod();
    }

    @Override
    public String value3() {
        return getMincpu();
    }

    @Override
    public String value4() {
        return getMinmemory();
    }

    @Override
    public String value5() {
        return getMaxcpu();
    }

    @Override
    public String value6() {
        return getMaxmemory();
    }

    @Override
    public ULong value7() {
        return getTimestamp();
    }

    @Override
    public K8sContainerInfoRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord value2(String value) {
        setOwnerpod(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord value3(String value) {
        setMincpu(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord value4(String value) {
        setMinmemory(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord value5(String value) {
        setMaxcpu(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord value6(String value) {
        setMaxmemory(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord value7(ULong value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public K8sContainerInfoRecord values(String value1, String value2, String value3, String value4, String value5, String value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IK8sContainerInfo from) {
        setName(from.getName());
        setOwnerpod(from.getOwnerpod());
        setMincpu(from.getMincpu());
        setMinmemory(from.getMinmemory());
        setMaxcpu(from.getMaxcpu());
        setMaxmemory(from.getMaxmemory());
        setTimestamp(from.getTimestamp());
    }

    @Override
    public <E extends IK8sContainerInfo> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached K8sContainerInfoRecord
     */
    public K8sContainerInfoRecord() {
        super(K8sContainerInfo.K8S_CONTAINER_INFO);
    }

    /**
     * Create a detached, initialised K8sContainerInfoRecord
     */
    public K8sContainerInfoRecord(String name, String ownerpod, String mincpu, String minmemory, String maxcpu, String maxmemory, ULong timestamp) {
        super(K8sContainerInfo.K8S_CONTAINER_INFO);

        set(0, name);
        set(1, ownerpod);
        set(2, mincpu);
        set(3, minmemory);
        set(4, maxcpu);
        set(5, maxmemory);
        set(6, timestamp);
    }
}
