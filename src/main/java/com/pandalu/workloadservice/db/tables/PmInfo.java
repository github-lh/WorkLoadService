/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables;


import com.pandalu.workloadservice.db.CompNetFusion;
import com.pandalu.workloadservice.db.Indexes;
import com.pandalu.workloadservice.db.Keys;
import com.pandalu.workloadservice.db.tables.records.PmInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PmInfo extends TableImpl<PmInfoRecord> {

    private static final long serialVersionUID = 951037848;

    /**
     * The reference instance of <code>comp_net_fusion.pm_info</code>
     */
    public static final PmInfo PM_INFO = new PmInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PmInfoRecord> getRecordType() {
        return PmInfoRecord.class;
    }

    /**
     * The column <code>comp_net_fusion.pm_info.uuid</code>. 物理机id
     */
    public final TableField<PmInfoRecord, String> UUID = createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "物理机id");

    /**
     * The column <code>comp_net_fusion.pm_info.pmID</code>. 物理机编号
     */
    public final TableField<PmInfoRecord, String> PMID = createField(DSL.name("pmID"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "物理机编号");

    /**
     * The column <code>comp_net_fusion.pm_info.pmName</code>. 物理机名称
     */
    public final TableField<PmInfoRecord, String> PMNAME = createField(DSL.name("pmName"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "物理机名称");

    /**
     * The column <code>comp_net_fusion.pm_info.state</code>. 物理主机运行状态
     */
    public final TableField<PmInfoRecord, Integer> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.INTEGER, this, "物理主机运行状态");

    /**
     * The column <code>comp_net_fusion.pm_info.city</code>. 物理机所在城市城市代码
     */
    public final TableField<PmInfoRecord, Integer> CITY = createField(DSL.name("city"), org.jooq.impl.SQLDataType.INTEGER, this, "物理机所在城市城市代码");

    /**
     * The column <code>comp_net_fusion.pm_info.pmIP</code>.
     */
    public final TableField<PmInfoRecord, String> PMIP = createField(DSL.name("pmIP"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>comp_net_fusion.pm_info.totalCpu</code>. 物理主机总 CPU
     */
    public final TableField<PmInfoRecord, Long> TOTALCPU = createField(DSL.name("totalCpu"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机总 CPU");

    /**
     * The column <code>comp_net_fusion.pm_info.totalMem</code>. 物理主机总内存
     */
    public final TableField<PmInfoRecord, Long> TOTALMEM = createField(DSL.name("totalMem"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机总内存");

    /**
     * The column <code>comp_net_fusion.pm_info.totalBand</code>. 物理主机总带宽
     */
    public final TableField<PmInfoRecord, Long> TOTALBAND = createField(DSL.name("totalBand"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机总带宽");

    /**
     * The column <code>comp_net_fusion.pm_info.totalDisk</code>. 物理主机总硬盘
     */
    public final TableField<PmInfoRecord, Long> TOTALDISK = createField(DSL.name("totalDisk"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机总硬盘");

    /**
     * The column <code>comp_net_fusion.pm_info.usedCpu</code>. 物理主机已消耗的 CPU
     */
    public final TableField<PmInfoRecord, Long> USEDCPU = createField(DSL.name("usedCpu"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机已消耗的 CPU");

    /**
     * The column <code>comp_net_fusion.pm_info.usedMem</code>. 物理主机已消耗的内存
     */
    public final TableField<PmInfoRecord, Long> USEDMEM = createField(DSL.name("usedMem"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机已消耗的内存");

    /**
     * The column <code>comp_net_fusion.pm_info.usedBand</code>. 物理主机已消耗的带宽
     */
    public final TableField<PmInfoRecord, Long> USEDBAND = createField(DSL.name("usedBand"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机已消耗的带宽");

    /**
     * The column <code>comp_net_fusion.pm_info.usedDisk</code>. 物理主机已消耗的硬盘
     */
    public final TableField<PmInfoRecord, Long> USEDDISK = createField(DSL.name("usedDisk"), org.jooq.impl.SQLDataType.BIGINT, this, "物理主机已消耗的硬盘");

    /**
     * The column <code>comp_net_fusion.pm_info.nVms</code>. 运行的虚拟机数
     */
    public final TableField<PmInfoRecord, Integer> NVMS = createField(DSL.name("nVms"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "运行的虚拟机数");

    /**
     * The column <code>comp_net_fusion.pm_info.timeStamp</code>. 时间戳
     */
    public final TableField<PmInfoRecord, Long> TIMESTAMP = createField(DSL.name("timeStamp"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "时间戳");

    /**
     * Create a <code>comp_net_fusion.pm_info</code> table reference
     */
    public PmInfo() {
        this(DSL.name("pm_info"), null);
    }

    /**
     * Create an aliased <code>comp_net_fusion.pm_info</code> table reference
     */
    public PmInfo(String alias) {
        this(DSL.name(alias), PM_INFO);
    }

    /**
     * Create an aliased <code>comp_net_fusion.pm_info</code> table reference
     */
    public PmInfo(Name alias) {
        this(alias, PM_INFO);
    }

    private PmInfo(Name alias, Table<PmInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private PmInfo(Name alias, Table<PmInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PmInfo(Table<O> child, ForeignKey<O, PmInfoRecord> key) {
        super(child, key, PM_INFO);
    }

    @Override
    public Schema getSchema() {
        return CompNetFusion.COMP_NET_FUSION;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PM_INFO_CITY_FK, Indexes.PM_INFO_PMID, Indexes.PM_INFO_PRIMARY);
    }

    @Override
    public UniqueKey<PmInfoRecord> getPrimaryKey() {
        return Keys.KEY_PM_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<PmInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<PmInfoRecord>>asList(Keys.KEY_PM_INFO_PRIMARY);
    }

    @Override
    public List<ForeignKey<PmInfoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PmInfoRecord, ?>>asList(Keys.CITY_FK);
    }

    public Map map() {
        return new Map(this, Keys.CITY_FK);
    }

    @Override
    public PmInfo as(String alias) {
        return new PmInfo(DSL.name(alias), this);
    }

    @Override
    public PmInfo as(Name alias) {
        return new PmInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PmInfo rename(String name) {
        return new PmInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PmInfo rename(Name name) {
        return new PmInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<String, String, String, Integer, Integer, String, Long, Long, Long, Long, Long, Long, Long, Long, Integer, Long> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
