/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables;


import com.pandalu.workloadservice.db.CompNetFusion;
import com.pandalu.workloadservice.db.Indexes;
import com.pandalu.workloadservice.db.Keys;
import com.pandalu.workloadservice.db.tables.records.K8sContainerInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sContainerInfo extends TableImpl<K8sContainerInfoRecord> {

    private static final long serialVersionUID = 637721527;

    /**
     * The reference instance of <code>comp_net_fusion.k8s_container_info</code>
     */
    public static final K8sContainerInfo K8S_CONTAINER_INFO = new K8sContainerInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<K8sContainerInfoRecord> getRecordType() {
        return K8sContainerInfoRecord.class;
    }

    /**
     * The column <code>comp_net_fusion.k8s_container_info.name</code>. pod名称
     */
    public final TableField<K8sContainerInfoRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "pod名称");

    /**
     * The column <code>comp_net_fusion.k8s_container_info.ownerPod</code>. 所属pod
     */
    public final TableField<K8sContainerInfoRecord, String> OWNERPOD = createField(DSL.name("ownerPod"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "所属pod");

    /**
     * The column <code>comp_net_fusion.k8s_container_info.minCpu</code>. 最少Cpu需求量
     */
    public final TableField<K8sContainerInfoRecord, String> MINCPU = createField(DSL.name("minCpu"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "最少Cpu需求量");

    /**
     * The column <code>comp_net_fusion.k8s_container_info.minMemory</code>. 最小内存需求量
     */
    public final TableField<K8sContainerInfoRecord, String> MINMEMORY = createField(DSL.name("minMemory"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "最小内存需求量");

    /**
     * The column <code>comp_net_fusion.k8s_container_info.maxCpu</code>. 最大cpu需求量
     */
    public final TableField<K8sContainerInfoRecord, String> MAXCPU = createField(DSL.name("maxCpu"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "最大cpu需求量");

    /**
     * The column <code>comp_net_fusion.k8s_container_info.maxMemory</code>. 最大内存需求量
     */
    public final TableField<K8sContainerInfoRecord, String> MAXMEMORY = createField(DSL.name("maxMemory"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "最大内存需求量");

    /**
     * The column <code>comp_net_fusion.k8s_container_info.timestamp</code>. 时间戳
     */
    public final TableField<K8sContainerInfoRecord, ULong> TIMESTAMP = createField(DSL.name("timestamp"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "时间戳");

    /**
     * Create a <code>comp_net_fusion.k8s_container_info</code> table reference
     */
    public K8sContainerInfo() {
        this(DSL.name("k8s_container_info"), null);
    }

    /**
     * Create an aliased <code>comp_net_fusion.k8s_container_info</code> table reference
     */
    public K8sContainerInfo(String alias) {
        this(DSL.name(alias), K8S_CONTAINER_INFO);
    }

    /**
     * Create an aliased <code>comp_net_fusion.k8s_container_info</code> table reference
     */
    public K8sContainerInfo(Name alias) {
        this(alias, K8S_CONTAINER_INFO);
    }

    private K8sContainerInfo(Name alias, Table<K8sContainerInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private K8sContainerInfo(Name alias, Table<K8sContainerInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> K8sContainerInfo(Table<O> child, ForeignKey<O, K8sContainerInfoRecord> key) {
        super(child, key, K8S_CONTAINER_INFO);
    }

    @Override
    public Schema getSchema() {
        return CompNetFusion.COMP_NET_FUSION;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.K8S_CONTAINER_INFO_POD_NAME, Indexes.K8S_CONTAINER_INFO_PRIMARY);
    }

    @Override
    public UniqueKey<K8sContainerInfoRecord> getPrimaryKey() {
        return Keys.KEY_K8S_CONTAINER_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<K8sContainerInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<K8sContainerInfoRecord>>asList(Keys.KEY_K8S_CONTAINER_INFO_PRIMARY);
    }

    @Override
    public K8sContainerInfo as(String alias) {
        return new K8sContainerInfo(DSL.name(alias), this);
    }

    @Override
    public K8sContainerInfo as(Name alias) {
        return new K8sContainerInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public K8sContainerInfo rename(String name) {
        return new K8sContainerInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public K8sContainerInfo rename(Name name) {
        return new K8sContainerInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
