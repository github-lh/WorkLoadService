/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables.daos;


import com.pandalu.workloadservice.db.tables.VmInfo;
import com.pandalu.workloadservice.db.tables.records.VmInfoRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record4;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VmInfoDao extends DAOImpl<VmInfoRecord, com.pandalu.workloadservice.db.tables.pojos.VmInfo, Record4<String, String, String, String>> {

    /**
     * Create a new VmInfoDao without any configuration
     */
    public VmInfoDao() {
        super(VmInfo.VM_INFO, com.pandalu.workloadservice.db.tables.pojos.VmInfo.class);
    }

    /**
     * Create a new VmInfoDao with an attached configuration
     */
    public VmInfoDao(Configuration configuration) {
        super(VmInfo.VM_INFO, com.pandalu.workloadservice.db.tables.pojos.VmInfo.class, configuration);
    }

    @Override
    public Record4<String, String, String, String> getId(com.pandalu.workloadservice.db.tables.pojos.VmInfo object) {
        return compositeKeyRecord(object.getUuid(), object.getVmid(), object.getPmid(), object.getVmimageid());
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfUuid(String lowerInclusive, String upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByUuid(String... values) {
        return fetch(VmInfo.VM_INFO.UUID, values);
    }

    /**
     * Fetch records that have <code>vmID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfVmid(String lowerInclusive, String upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.VMID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vmID IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByVmid(String... values) {
        return fetch(VmInfo.VM_INFO.VMID, values);
    }

    /**
     * Fetch records that have <code>pmID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfPmid(String lowerInclusive, String upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.PMID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pmID IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByPmid(String... values) {
        return fetch(VmInfo.VM_INFO.PMID, values);
    }

    /**
     * Fetch records that have <code>vmImageID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfVmimageid(String lowerInclusive, String upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.VMIMAGEID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vmImageID IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByVmimageid(String... values) {
        return fetch(VmInfo.VM_INFO.VMIMAGEID, values);
    }

    /**
     * Fetch records that have <code>vmName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfVmname(String lowerInclusive, String upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.VMNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vmName IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByVmname(String... values) {
        return fetch(VmInfo.VM_INFO.VMNAME, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByStatus(Integer... values) {
        return fetch(VmInfo.VM_INFO.STATUS, values);
    }

    /**
     * Fetch records that have <code>totalCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfTotalcpu(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.TOTALCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>totalCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByTotalcpu(Long... values) {
        return fetch(VmInfo.VM_INFO.TOTALCPU, values);
    }

    /**
     * Fetch records that have <code>totalMem BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfTotalmem(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.TOTALMEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>totalMem IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByTotalmem(Long... values) {
        return fetch(VmInfo.VM_INFO.TOTALMEM, values);
    }

    /**
     * Fetch records that have <code>totalDisk BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfTotaldisk(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.TOTALDISK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>totalDisk IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByTotaldisk(Long... values) {
        return fetch(VmInfo.VM_INFO.TOTALDISK, values);
    }

    /**
     * Fetch records that have <code>totalBand BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfTotalband(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.TOTALBAND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>totalBand IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByTotalband(Long... values) {
        return fetch(VmInfo.VM_INFO.TOTALBAND, values);
    }

    /**
     * Fetch records that have <code>usedCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfUsedcpu(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.USEDCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByUsedcpu(Long... values) {
        return fetch(VmInfo.VM_INFO.USEDCPU, values);
    }

    /**
     * Fetch records that have <code>usedMem BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfUsedmem(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.USEDMEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedMem IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByUsedmem(Long... values) {
        return fetch(VmInfo.VM_INFO.USEDMEM, values);
    }

    /**
     * Fetch records that have <code>usedDisk BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfUseddisk(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.USEDDISK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedDisk IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByUseddisk(Long... values) {
        return fetch(VmInfo.VM_INFO.USEDDISK, values);
    }

    /**
     * Fetch records that have <code>usedBand BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfUsedband(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.USEDBAND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedBand IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByUsedband(Long... values) {
        return fetch(VmInfo.VM_INFO.USEDBAND, values);
    }

    /**
     * Fetch records that have <code>timeStamp BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchRangeOfTimestamp(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(VmInfo.VM_INFO.TIMESTAMP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>timeStamp IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.VmInfo> fetchByTimestamp(ULong... values) {
        return fetch(VmInfo.VM_INFO.TIMESTAMP, values);
    }
}
