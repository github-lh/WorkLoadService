/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables.daos;


import com.pandalu.workloadservice.db.tables.K8sContainerInfo;
import com.pandalu.workloadservice.db.tables.records.K8sContainerInfoRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sContainerInfoDao extends DAOImpl<K8sContainerInfoRecord, com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo, Record2<String, String>> {

    /**
     * Create a new K8sContainerInfoDao without any configuration
     */
    public K8sContainerInfoDao() {
        super(K8sContainerInfo.K8S_CONTAINER_INFO, com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo.class);
    }

    /**
     * Create a new K8sContainerInfoDao with an attached configuration
     */
    public K8sContainerInfoDao(Configuration configuration) {
        super(K8sContainerInfo.K8S_CONTAINER_INFO, com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo.class, configuration);
    }

    @Override
    public Record2<String, String> getId(com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo object) {
        return compositeKeyRecord(object.getName(), object.getOwnerpod());
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByName(String... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.NAME, values);
    }

    /**
     * Fetch records that have <code>ownerPod BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfOwnerpod(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.OWNERPOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ownerPod IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByOwnerpod(String... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.OWNERPOD, values);
    }

    /**
     * Fetch records that have <code>minCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfMincpu(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.MINCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>minCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByMincpu(String... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.MINCPU, values);
    }

    /**
     * Fetch records that have <code>minMemory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfMinmemory(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.MINMEMORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>minMemory IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByMinmemory(String... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.MINMEMORY, values);
    }

    /**
     * Fetch records that have <code>maxCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfMaxcpu(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.MAXCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maxCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByMaxcpu(String... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.MAXCPU, values);
    }

    /**
     * Fetch records that have <code>maxMemory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfMaxmemory(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.MAXMEMORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maxMemory IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByMaxmemory(String... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.MAXMEMORY, values);
    }

    /**
     * Fetch records that have <code>timestamp BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchRangeOfTimestamp(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(K8sContainerInfo.K8S_CONTAINER_INFO.TIMESTAMP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sContainerInfo> fetchByTimestamp(ULong... values) {
        return fetch(K8sContainerInfo.K8S_CONTAINER_INFO.TIMESTAMP, values);
    }
}
