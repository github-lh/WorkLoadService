/*
 * This file is generated by jOOQ.
 */
package com.pandalu.workloadservice.db.tables.daos;


import com.pandalu.workloadservice.db.tables.K8sPodInfo;
import com.pandalu.workloadservice.db.tables.records.K8sPodInfoRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sPodInfoDao extends DAOImpl<K8sPodInfoRecord, com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo, Record2<String, String>> {

    /**
     * Create a new K8sPodInfoDao without any configuration
     */
    public K8sPodInfoDao() {
        super(K8sPodInfo.K8S_POD_INFO, com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo.class);
    }

    /**
     * Create a new K8sPodInfoDao with an attached configuration
     */
    public K8sPodInfoDao(Configuration configuration) {
        super(K8sPodInfo.K8S_POD_INFO, com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo.class, configuration);
    }

    @Override
    public Record2<String, String> getId(com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo object) {
        return compositeKeyRecord(object.getUid(), object.getName());
    }

    /**
     * Fetch records that have <code>uid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfUid(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.UID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uid IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByUid(String... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.UID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByName(String... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.NAME, values);
    }

    /**
     * Fetch records that have <code>ip BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfIp(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.IP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ip IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByIp(String... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.IP, values);
    }

    /**
     * Fetch records that have <code>ownerNode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfOwnernode(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.OWNERNODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ownerNode IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByOwnernode(String... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.OWNERNODE, values);
    }

    /**
     * Fetch records that have <code>usedCpu BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfUsedcpu(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.USEDCPU, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedCpu IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByUsedcpu(String... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.USEDCPU, values);
    }

    /**
     * Fetch records that have <code>usedMemory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfUsedmemory(String lowerInclusive, String upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.USEDMEMORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>usedMemory IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByUsedmemory(String... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.USEDMEMORY, values);
    }

    /**
     * Fetch records that have <code>timestamp BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchRangeOfTimestamp(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(K8sPodInfo.K8S_POD_INFO.TIMESTAMP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<com.pandalu.workloadservice.db.tables.pojos.K8sPodInfo> fetchByTimestamp(ULong... values) {
        return fetch(K8sPodInfo.K8S_POD_INFO.TIMESTAMP, values);
    }
}
